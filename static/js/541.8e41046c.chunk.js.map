{"version":3,"file":"static/js/541.8e41046c.chunk.js","mappings":"6OAKe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,YACR,SAAwBP,IACtBQ,EAAAA,EAAAA,GAAe,SAAD,OAAUR,EAAV,aACXS,MAAK,SAAAC,GACJN,GAAa,OAAIM,EAAKC,MACvB,IACAC,OAAM,SAAAP,GACLQ,QAAQR,MAAMA,GACdC,GAAS,EACV,IACAQ,SAAQ,WACPR,GAAS,EACV,GACJ,CAEDS,CAAef,EAChB,GAAE,CAACA,KAGF,0BACIK,IACA,wBACGF,EAAUa,KAAI,SAAAC,GACb,OACE,2BACE,0BACE,gBACEC,MAAM,QACNC,IACEF,EAAKG,aAAL,yCACsCH,EAAKG,cAD3C,6EAIFC,IAAKJ,EAAKK,UAGd,uBAAIL,EAAKK,QACT,yBAAG,eACU,0BAAOL,EAAKM,iBAdlBN,EAAKO,GAkBjB,OAKV,C,uGCtDc,SAAehB,EAA9B,kC,aAAe,O,oBAAA,WAA8BiB,GAA9B,gGAA2CC,EAA3C,+BAAmD,CAAC,EAC3DC,EAAU,mCAEVC,EAAS,CACbC,OAAQ,MACRC,QAAS,gCACTC,QAAS,CAAEC,OAAQ,oBACnBC,QAAO,QACLC,QAASP,GACND,IATM,SAaUS,EAAAA,EAAAA,IAAUV,EAAaG,GAbjC,cAaPQ,EAbO,yBAcNA,EAAS1B,MAdH,mE","sources":["components/Cast/Cast.js","components/Services/tmdbAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport serviceTmdbAPI from '../Services/tmdbAPI';\r\n\r\nexport default function Cast() {\r\n  const { movieId } = useParams();\r\n  const [castItems, setCastItems] = useState([]);\r\n  const [error, setError] = useState(true);\r\n\r\n  useEffect(() => {\r\n    function fetchCastItems(movieId) {\r\n      serviceTmdbAPI(`movie/${movieId}/credits`)\r\n        .then(data => {\r\n          setCastItems([...data.cast]);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n          setError(true);\r\n        })\r\n        .finally(() => {\r\n          setError(false);\r\n        });\r\n    }\r\n\r\n    fetchCastItems(movieId);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      {!error && (\r\n        <ul>\r\n          {castItems.map(item => {\r\n            return (\r\n              <li key={item.id}>\r\n                <div>\r\n                  <img\r\n                    width=\"150px\"\r\n                    src={\r\n                      item.profile_path\r\n                        ? `https://image.tmdb.org/t/p/w500${item.profile_path}`\r\n                        : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\r\n                    }\r\n                    alt={item.name}\r\n                  />\r\n                </div>\r\n                <p>{item.name}</p>\r\n                <p>\r\n                  Character: <span>{item.character}</span>\r\n                </p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default async function serviceTmdbAPI(searchQuery, param = {}) {\r\n  const API_KEY = '3d1fae92642db152fb96a11121415088';\r\n\r\n  const config = {\r\n    method: 'get',\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n    headers: { accept: 'application/json' },\r\n    params: {\r\n      api_key: API_KEY,\r\n      ...param,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(searchQuery, config);\r\n  return response.data;\r\n}\r\n\r\n// serviceTmdbAPI.propTypes = {\r\n//   searchQuery: PropTypes.string.isRequired,\r\n//   page: PropTypes.number.isRequired,\r\n//   hitsPerPage: PropTypes.number,\r\n// };\r\n"],"names":["Cast","movieId","useParams","useState","castItems","setCastItems","error","setError","useEffect","serviceTmdbAPI","then","data","cast","catch","console","finally","fetchCastItems","map","item","width","src","profile_path","alt","name","character","id","searchQuery","param","API_KEY","config","method","baseURL","headers","accept","params","api_key","axios","response"],"sourceRoot":""}