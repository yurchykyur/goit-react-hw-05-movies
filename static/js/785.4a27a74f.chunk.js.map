{"version":3,"file":"static/js/785.4a27a74f.chunk.js","mappings":"6OAKe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,YACR,SAA2BP,IACzBQ,EAAAA,EAAAA,GAAe,SAAD,OAAUR,EAAV,aACXS,MAAK,SAAAC,GACJN,GAAgB,OAAIM,EAAKC,SAC1B,IACAC,OAAM,SAAAP,GACLQ,QAAQR,MAAMA,GACdC,GAAS,EACV,IACAQ,SAAQ,WACPR,GAAS,EACV,GACJ,CAEDS,CAAkBf,EACnB,GAAE,CAACA,KAGF,0BACIK,IACA,wBAC2B,IAAxBF,EAAaa,OACZb,EAAac,KAAI,SAAAC,GACf,OACE,2BACE,0BAAI,WAASA,EAAKC,WAClB,uBAAID,EAAKE,YAFFF,EAAKG,GAKjB,KAED,yBACE,uBAAG,mDAOhB,C,uGC/Cc,SAAeb,EAA9B,kC,aAAe,O,oBAAA,WAA8Bc,GAA9B,gGAA2CC,EAA3C,+BAAmD,CAAC,EAC3DC,EAAU,mCAEVC,EAAS,CACbC,OAAQ,MACRC,QAAS,gCACTC,QAAS,CAAEC,OAAQ,oBACnBC,QAAO,QACLC,QAASP,GACND,IATM,SAaUS,EAAAA,EAAAA,IAAUV,EAAaG,GAbjC,cAaPQ,EAbO,yBAcNA,EAASvB,MAdH,mE","sources":["components/Reviews/Reviews.js","components/Services/tmdbAPI.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport serviceTmdbAPI from '../Services/tmdbAPI';\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n  const [reviewsItems, setReviewsItems] = useState([]);\r\n  const [error, setError] = useState(true);\r\n\r\n  useEffect(() => {\r\n    function fetchReviewsItems(movieId) {\r\n      serviceTmdbAPI(`movie/${movieId}/reviews`)\r\n        .then(data => {\r\n          setReviewsItems([...data.results]);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n          setError(true);\r\n        })\r\n        .finally(() => {\r\n          setError(false);\r\n        });\r\n    }\r\n\r\n    fetchReviewsItems(movieId);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      {!error && (\r\n        <ul>\r\n          {reviewsItems.length !== 0 ? (\r\n            reviewsItems.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <h2>Author: {item.author}</h2>\r\n                  <p>{item.content}</p>\r\n                </li>\r\n              );\r\n            })\r\n          ) : (\r\n            <li>\r\n              <p>We don't have any reviews for this movie.</p>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default async function serviceTmdbAPI(searchQuery, param = {}) {\r\n  const API_KEY = '3d1fae92642db152fb96a11121415088';\r\n\r\n  const config = {\r\n    method: 'get',\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n    headers: { accept: 'application/json' },\r\n    params: {\r\n      api_key: API_KEY,\r\n      ...param,\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(searchQuery, config);\r\n  return response.data;\r\n}\r\n\r\n// serviceTmdbAPI.propTypes = {\r\n//   searchQuery: PropTypes.string.isRequired,\r\n//   page: PropTypes.number.isRequired,\r\n//   hitsPerPage: PropTypes.number,\r\n// };\r\n"],"names":["Reviews","movieId","useParams","useState","reviewsItems","setReviewsItems","error","setError","useEffect","serviceTmdbAPI","then","data","results","catch","console","finally","fetchReviewsItems","length","map","item","author","content","id","searchQuery","param","API_KEY","config","method","baseURL","headers","accept","params","api_key","axios","response"],"sourceRoot":""}